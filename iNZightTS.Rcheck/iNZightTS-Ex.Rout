
R Under development (unstable) (2017-06-08 r72772) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "iNZightTS"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('iNZightTS')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("decompositionplot")
> ### * decompositionplot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: decompositionplot
> ### Title: Plot a Time Series Decomposition
> ### Aliases: decompositionplot
> 
> ### ** Examples
> 
> ## Not run: 
> ##D z <- iNZightTS(ldeaths)
> ##D y <- decompositionplot(z)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("forecastplot")
> ### * forecastplot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: forecastplot
> ### Title: Forecast plot
> ### Aliases: forecastplot
> 
> ### ** Examples
> 
> ## Not run: 
> ##D z <- iNZightTS(ldeaths)
> ##D forecastplot(z)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("iNZightTS")
> ### * iNZightTS
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: iNZightTS
> ### Title: iNZightTS (Time-Series) Objects
> ### Aliases: iNZightTS iNZightMTS
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # create from a ts object
> ##D z <- iNZightTS(UKgas)
> ##D rawplot(z)
> ##D 
> ##D # create from a data.frame
> ##D x <- iNZightTS(data.frame(Return = rnorm(100), Time = 1:100), var = "Return")
> ##D 
> ##D # create from a data.frame with modified time frame
> ##D y <- iNZightTS(data.frame(Return = rnorm(100)), start = c(1990, 1), end =
> ##D c(1993, 5), freq = 12, var = 1)
> ##D rawplot(y)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("multiseries")
> ### * multiseries
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: multiseries
> ### Title: Compare multiple timeseries
> ### Aliases: multiseries multiseries.1 multiseries.2p
> ### Keywords: timeseries
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # Frequency > 1
> ##D y <- iNZightTS(Seatbelts)
> ##D multiseries(y)
> ##D 
> ##D # Frequency = 1
> ##D # Casulties for Jan of each year
> ##D X <- Seatbelts[12*(1:15), -8]
> ##D X <- as.ts(X)
> ##D z <- iNZightTS(X)
> ##D multiseries(z)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("print.iNZightTS")
> ### * print.iNZightTS
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: print.iNZightTS
> ### Title: Print an iNZightTS object
> ### Aliases: print.iNZightTS
> 
> ### ** Examples
> 
> ## Not run: 
> ##D print(iNZightTS(UKgas))
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("seasonplot")
> ### * seasonplot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: seasonplot
> ### Title: Plot Seasonal Subseries from a Time Series
> ### Aliases: seasonplot
> 
> ### ** Examples
> 
> ## Not run: 
> ##D x <- iNZightTS(UKgas)
> ##D seasonplot(x)
> ## End(Not run)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.144 0 0.145 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
